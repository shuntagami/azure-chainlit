trigger: none # Manual trigger only

parameters:
  - name: migrationTarget
    displayName: 'Migration Target'
    type: string
    default: 'head'
    values:
      - 'head'        # Latest migration
      - 'base'        # Reset to base (empty database)

  - name: showSql
    displayName: 'Show SQL Statements'
    type: boolean
    default: false

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: DatabaseCredentials
  - name: effectiveTarget
    value: ${{ parameters.migrationTarget }}

stages:
  - stage: ValidateMigration
    displayName: 'Validate Migration'
    jobs:
      - job: Prepare
        displayName: 'Prepare Migration'
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
              addToPath: true
            displayName: 'Set up Python'

          - script: |
              python -m pip install --upgrade pip
              pip install poetry
              poetry config virtualenvs.create false
              poetry install
            displayName: 'Install dependencies'

          - script: |
              cd app
              alembic upgrade --sql $(effectiveTarget)
            displayName: 'Preview migration SQL without applying'
            condition: eq(parameters.showSql, true)

          - script: |
              cd app
              alembic check
            displayName: 'Check Alembic configuration'

  - stage: DeployMigration
    displayName: 'Deploy Database Migration'
    dependsOn: ValidateMigration
    jobs:
      - job: MigrateDatabase
        displayName: 'Migrate Database'
        steps:
          - checkout: self

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.10'
              addToPath: true
            displayName: 'Set up Python'

          - script: |
              python -m pip install --upgrade pip
              pip install poetry
              poetry config virtualenvs.create false
              poetry install
            displayName: 'Install dependencies'

          - script: |
              cd app
              alembic history
            displayName: 'Show migration history'

          - script: |
              cd app
              alembic current
            displayName: 'Show current migration version'

          - script: |
              cd app
              echo "Migrating to $(effectiveTarget)"
              alembic upgrade $(effectiveTarget)
            displayName: 'Apply database migration'

          - script: |
              cd app
              alembic current
            displayName: 'Verify new migration version'
